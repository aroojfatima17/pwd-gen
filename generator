import random
import re
import tkinter as tk
from tkinter import messagebox
from threading import Timer

def generate_password(length):

    if length < 8:
        raise ValueError("Password length must be at least 8 characters for security.")

    # Define character pools
    lowercase = "abcdefghijklmnopqrstuvwxyz"
    uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    digits = "0123456789"
    special = "!@#$%^&*()-_=+[]{}|;:'\",.<>?/"

    # Ensure the password contains at least one character from each category
    all_characters = lowercase + uppercase + digits + special
    password = [
        random.choice(lowercase),
        random.choice(uppercase),
        random.choice(digits),
        random.choice(special),
    ]

    # Fill the rest of the password length with random choices from all characters
    password += random.choices(all_characters, k=length - 4)

    # Shuffle the password to ensure randomness
    random.shuffle(password)

    generated_password = ''.join(password)

    # Validate the generated password using regex
    if not re.search(r'[a-z]', generated_password):
        raise ValueError("Password does not contain a lowercase letter.")
    if not re.search(r'[A-Z]', generated_password):
        raise ValueError("Password does not contain an uppercase letter.")
    if not re.search(r'\d', generated_password):
        raise ValueError("Password does not contain a digit.")
    if not re.search(r'[!@#$%^&*()\-_=+\[\]{}|;:\'\",.<>?/]', generated_password):
        raise ValueError("Password does not contain a special character.")

    return generated_password

def onload_sequence():
    result_label.config(text="\nGenerating password...")
    root.update()
    Timer(1.0, display_generated_password).start()

def display_generated_password():
    try:
        length = int(entry_length.get())
        password = generate_password(length)
        result_label.config(text=f"Generated Password: {password}\n\nThank you for using the Password Generator App!\nName: {name}\nRegistration Number: {registration_number}", fg="green")
    except ValueError as e:
        messagebox.showerror("Error", str(e))

# Create the main Tkinter window
root = tk.Tk()
root.title("Password Generator")
root.geometry("400x300")
root.configure(bg="#dce6f0")  # Light blue background

# Name and Registration number
name = "AROOJ FATIMA"
registration_number = "F2021065198"

# Input field for password length
frame = tk.Frame(root, bg="#dce6f0")
frame.pack(pady=10)
tk.Label(frame, text="Enter Password Length:", bg="#dce6f0", font=("Arial", 12)).grid(row=0, column=0, padx=10, pady=5)
entry_length = tk.Entry(frame, width=10, font=("Arial", 12))
entry_length.grid(row=0, column=1, padx=10, pady=5)

# Button to start the sequence
generate_button = tk.Button(root, text="Generate", bg="#a8b7c7", font=("Arial", 12), command=onload_sequence)
generate_button.pack(pady=20)

# Label to display the messages and password
result_label = tk.Label(root, text=f"Welcome to the Password Generator App!\nName: {name}\nRegistration Number: {registration_number}\n", bg="#dce6f0", font=("Arial", 12))
result_label.pack(pady=10)

root.mainloop()

